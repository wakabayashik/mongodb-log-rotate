# refs: https://qiita.com/okmt765/items/ad3cdfb5850e68edcef0
name: Release

# Releasesへのファイル追加のために書き込み権限が必要
permissions:
  contents: write

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { os: ubuntu-latest  , target: x86_64-unknown-linux-gnu       , use-cross: false , extension: ""   }
          # - { os: ubuntu-latest  , target: x86_64-unknown-linux-musl      , use-cross: true  , extension: ""   }
          # - { os: ubuntu-latest  , target: armv7-unknown-linux-gnueabihf  , use-cross: true  , extension: ""   }
          # - { os: ubuntu-latest  , target: armv7-unknown-linux-musleabihf , use-cross: true  , extension: ""   }
          # - { os: ubuntu-latest  , target: aarch64-unknown-linux-gnu      , use-cross: true  , extension: ""   }
          # - { os: ubuntu-latest  , target: aarch64-unknown-linux-musl     , use-cross: true  , extension: ""   }
          # - { os: macos-latest   , target: x86_64-apple-darwin            , use-cross: false , extension: ""   }
          # - { os: macos-latest   , target: aarch64-apple-darwin           , use-cross: false , extension: ""   }
          - { os: windows-latest , target: x86_64-pc-windows-msvc         , use-cross: false , extension: .exe }
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Rustのpackage名を取得して環境変数に入れておく。(後のステップで使用)
      - name: Extract crate information
        shell: bash
        run: |
          echo "PROJECT_NAME=$(sed -n 's/^name = "\(.*\)"/\1/p' Cargo.toml | head -n1)" >> $GITHUB_ENV

      # rustcやcargoをインストール
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      # targetに応じてcargoもしくはcrossを使用してビルド
      - name: Build
        shell: bash
        run: cargo build --release --target ${{ matrix.job.target }}

      # ビルド済みバイナリを 7z にアーカイブ
      - name: Archive Release
        uses: thedoctor0/zip-release@main
        with:
          type: '7z'
          filename: ${{ env.PROJECT_NAME }}_${{ github.ref_name }}-${{ matrix.job.target }}.7z
          directory: target/${{ matrix.job.target }}/release/
          path: ${{ env.PROJECT_NAME }}${{ matrix.job.extension }}

      # ビルド済みバイナリをReleasesに配置
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/${{ matrix.job.target }}/release/${{ env.PROJECT_NAME }}_${{ github.ref_name }}-${{ matrix.job.target }}.7z
